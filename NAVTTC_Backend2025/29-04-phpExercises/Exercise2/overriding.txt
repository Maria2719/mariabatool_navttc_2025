Summary:
Concept
Description
Static Variable
Belongs to class, not object; retains value globally.
Static Method
Called without object; can't use $this.
Inheritance
Reuse code by extending parent class.
Access Modifiers
Control visibility (public, protected, private)
Method Overriding
Child method replaces parent version.



ðŸ”§ Exercise 1: Basic Inheritance
Instruction:
 Create a Person class with a name property and a sayHello() method. Then create a Teacher class that inherits from Person and adds a subject property. Instantiate the Teacher and display both name and subject using the methods.

ðŸ”§ Exercise 2: Method Overriding
Instruction:
 Create a Device class with a method powerOn() that echoes a generic message. Then create a Laptop class that extends Device and overrides the powerOn() method with a more specific message. Call the method from both classes and observe the difference.

-------------------------------------------------------------------------
Function overloading and overriding is the OOPs feature in PHP. 
In function overloading, more than one function can have same method signature but different number of arguments. 
But in case of function overriding, more than one functions will have same method signature and number of arguments. 
Function Overloading: 
                 Function overloading contains same function name and that function performs different task according to number of arguments. For example, find the area of certain shapes where radius are given then it should return area of circle if height and width are given then it should give area of rectangle and others. Like other OOP languages function overloading can not be done by native approach. In PHP function overloading is done with the help of magic function __call(). This function takes function name and arguments.

Function Overriding: Function overriding is same as other OOPs programming languages. In function overriding, both parent and child classes should have same function name with and number of arguments. It is used to replace parent method in child class. The purpose of overriding is to change the behavior of parent class method. The two methods with the same name and same parameter is called overriding.
----------------------------------------------------------------------------

ðŸ”§ Exercise 3: Parent Method Access
Instruction:
 Create a User class with a method getRole() that returns "User". Create an Admin class that extends User and overrides the getRole() method but still calls the parent method using parent::getRole() and appends " & Admin".

ðŸ”§ Exercise 4: Add Child Method
Instruction:
 Make a Vehicle class with a property type. Then create a Truck class that extends Vehicle and adds a method loadGoods() that echoes "Goods loaded in Truck". Instantiate the Truck class and call both the inherited and own method.

ðŸ”§ Exercise 5: Multiple Child Classes
Instruction:
 Create a Shape class with a method getArea() that returns 0. Then create two child classes: Rectangle and Circle. Each should override getArea() and compute the area based on their respective formulas.
